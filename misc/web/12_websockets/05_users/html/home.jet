<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>

    <title>Home</title>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">This is the home page</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>

                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>
                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                </div>

                <hr>

                <a href="#" class="btn btn-outline-secondary" id="sendButton">Send Message</a>

                <input type="hidden" name="action" id="action">

                <div id="status" class="mt-2 float-end">

                </div>
                
                <hr>

                <div id="output" class="chatbox">

                </div>
            </div>
            <div class="col-md-4">
                <h3>Who's Online</h3>

                <ul id="online_users">

                </ul>
            </div>
        </div>
    </div>
</body>

<!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/static/reconnecting-websocket.min.js"></script>

<script>
    let socket = null;
    let output = document.getElementById("output");

    window.onbeforeunload = function(){
        console.log("Leaving connection");
        let data = {};
        data["action"] = "left";
        socket.send(JSON.stringify(data));
    }

    document.addEventListener("DOMContentLoaded", function(){
        socket = new ReconnectingWebSocket("ws://localhost:8080/ws", null, {debug: true, reconnectInterval: 3000});

        const offline = `<span class="badge bg-danger">Disconnected</span>`
        const online = `<span class="badge bg-success">Connected</span>`
        let statusDiv = document.getElementById("status")

        socket.onopen = () => {
            console.log("Connection opened");
            let data = {};
            data["action"] = "list_users";
            socket.send(JSON.stringify(data));
            statusDiv.innerHTML = online;
        }

        socket.onclose = () => {
            console.log("Connection closed");
            statusDiv.innerHTML = offline;
        }

        socket.onerror = error => {
            console.log("There was an error");
            statusDiv.innerHTML = offline;
        }

        socket.onmessage = msg => {
            let data = JSON.parse(msg.data);
            console.log("Action is:", data.action);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users != undefined && data.connected_users.length > 0) {
                        data.connected_users.forEach(function(item){
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        })
                    }

                    break;

                case "broadcast":
                    output.innerHTML = output.innerHTML + data.message + "<br>";
                    break;
            }
        }

        let userField = document.getElementById("username")
        userField.addEventListener("change", function(){
            let data = {}
            data["action"] = "username";
            data["username"] = this.value;
            console.log("Sending " + JSON.stringify(data));
            socket.send(JSON.stringify(data));
        })

        let messageField = document.getElementById("message")
        messageField.addEventListener("keydown", function(event){
            if (event.code === "Enter") {
                if (!socket) {
                    console.log("Fail. No socket connection");
                    return false;
                }
                if (userField.value === "" || messageField.value === "") {
                    event.preventDefault();
                    event.stopPropagation();
                    showError("Fill out username and message");
                    return false;
                }
                event.preventDefault();
                event.stopPropagation();
                sendMessage();
            }
        })

        let sendButton = document.getElementById("sendButton")
        sendButton.addEventListener("click", function(event){
            if (userField.value === "" || messageField.value === "") {
                showError("Fill out username and message");
                return false;
            } else {
                sendMessage();
            }
        })
    })

    function sendMessage() {
        let data = {};
        data["action"] = "broadcast";
        data["username"] = document.getElementById("username").value;
        data["message"] = document.getElementById("message").value;
        socket.send(JSON.stringify(data))
        document.getElementById("message").value = "";
    }

    function showError(msg) {
        notie.alert({
            type: "error", // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
            text: msg,
            time: 3,
        })
    }
</script>

</html>